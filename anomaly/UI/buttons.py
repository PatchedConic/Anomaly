from PyQt6.QtWidgets import QGridLayout
from PyQt6.QtGui import QKeySequence, QShortcut
from anomaly.UI import buttonClass


class Buttons(QGridLayout):
    def __init__(self, layoutHandle, controllerHandle, windowHandle):
        QGridLayout.__init__(self)
        self.controllerHandle = controllerHandle
        self.button0 = buttonClass.funcButton("0", "0", '0')
        self.buttonDot = buttonClass.funcButton(".", '.','.')
        self.buttonEnter = buttonClass.funcButton("Enter",'return','return')
        self.button1 = buttonClass.funcButton("1","1", '1')
        self.button2 = buttonClass.funcButton("2", '2','2')
        self.button3 = buttonClass.funcButton("3", '3','3')
        self.buttonPlus = buttonClass.funcButton("+", '+','+')
        self.button4 = buttonClass.funcButton("4", '4','4')
        self.button5 = buttonClass.funcButton("5", '5','5')
        self.button6 = buttonClass.funcButton("6", '6','6')
        self.buttonMinus = buttonClass.funcButton("-", '-','-')
        self.button7 = buttonClass.funcButton("7",'7','7')
        self.button8 = buttonClass.funcButton("8",'8','8')
        self.button9 = buttonClass.funcButton("9",'9','9')
        self.buttonMult = buttonClass.funcButton("\u00D7", '*','*')
        self.buttonSin = buttonClass.funcButton("sin",'sin','s', 'asin','asin','Shift+s')        
        self.buttonCos = buttonClass.funcButton("cos", 'cos','c', 'acos','acos','Shift+c')
        self.buttonTan = buttonClass.funcButton("tan", 'tan','t', 'atan','atan','Shift+t')
        self.buttonDiv = buttonClass.funcButton("\u00F7", '/','/')
        self.buttonPi = buttonClass.funcButton("\u03C0",'pi','p')
        self.buttonPlusMinus = buttonClass.funcButton("\u00B1",'plusminus','n')
        self.buttonSwap = buttonClass.funcButton("X \u21C6 Y", 'swap','Ctrl+s')
        self.buttonClear = buttonClass.funcButton("C",'clear','Esc')
        self.buttonShift = buttonClass.button("\u2191")
        self.buttonShift.clicked.connect(lambda:self.shiftClicked())
        self.shift_shortcut = QShortcut(QKeySequence('Space'),windowHandle)
        self.shift_shortcut.activated.connect(lambda:self.shiftClicked())
        self.buttonLn = buttonClass.funcButton("ln", 'ln','l', 'e\u02E3','e','e')
        self.buttonExp = buttonClass.funcButton("y\u02E3", '^','^','\u02E3\u221Ay','root','r')
        self.buttonBackspace = buttonClass.funcButton("\u2190", 'del','backspace')
        self.button_mode = buttonClass.button(controllerHandle.get_mode())
        self.button_mode.clicked.connect(lambda:self.mode_clicked(controllerHandle))
        self.settingsButton = buttonClass.button("\u2600")
        self.settingsButton.clicked.connect(lambda:controllerHandle.switchMode())
        self.button_inv = buttonClass.funcButton("1/x", 'inv','i')
        self.log_button = buttonClass.funcButton("Log\u2081\u2080 X", 'log','Shift+L')

        self.addWidget(self.button0,7,0)
        self.addWidget(self.buttonDot,7,1)
        self.addWidget(self.buttonEnter, 7, 2, 1, 2)
        self.addWidget(self.button1, 6, 0)
        self.addWidget(self.button2, 6, 1)
        self.addWidget(self.button3, 6, 2)
        self.addWidget(self.buttonPlus, 6, 3)        
        self.addWidget(self.button4, 5, 0)
        self.addWidget(self.button5, 5, 1)
        self.addWidget(self.button6, 5, 2)
        self.addWidget(self.buttonMinus, 5, 3)
        self.addWidget(self.button7,4, 0)
        self.addWidget(self.button8, 4, 1)
        self.addWidget(self.button9, 4, 2)
        self.addWidget(self.buttonMult, 4, 3)
        self.addWidget(self.buttonSin, 3, 0)
        self.addWidget(self.buttonCos, 3, 1)
        self.addWidget(self.buttonTan, 3, 2)
        self.addWidget(self.buttonDiv, 3, 3)
        self.addWidget(self.buttonPi, 2, 0)
        self.addWidget(self.buttonPlusMinus, 2, 1)
        self.addWidget(self.buttonSwap, 2, 2)
        self.addWidget(self.buttonClear, 2, 3)
        self.addWidget(self.buttonShift, 1, 0)
        self.addWidget(self.buttonLn, 1, 1)
        self.addWidget(self.buttonExp, 1, 2)
        self.addWidget(self.buttonBackspace, 1, 3)
        self.addWidget(self.button_mode, 0, 0)
        self.addWidget(self.settingsButton,0, 3)
        self.addWidget(self.button_inv, 0, 1)
        self.addWidget(self.log_button, 0, 2)

        layoutHandle.addLayout(self, 1,0,2,1)
        
    def shiftClicked(self):
        self.button0.shift()
        self.buttonSin.shift()
        self.buttonCos.shift()
        self.buttonTan.shift()
        self.buttonLn.shift()
        self.buttonExp.shift()
             
    def mode_clicked(self, controllerHandle):
        controllerHandle.set_mode()
        self.button_mode.setText(controllerHandle.get_mode())
    def appendVal(self, value):
        from anomaly.entry import applicationController as aCon
        aCon.appendNumber(value)

  