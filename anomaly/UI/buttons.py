from PyQt6.QtWidgets import QGridLayout
from PyQt6.QtGui import QKeySequence, QShortcut
from anomaly.UI import buttonClass



class Buttons(QGridLayout):
    def __init__(self, layoutHandle, controllerHandle, UIHandle, windowHandle):
        self.controllerHandle = controllerHandle
        QGridLayout.__init__(self)
        self.button0 = buttonClass.button("0")
        self.button0.clicked.connect(lambda:controllerHandle.appendNumber("0"))
        self.button0_shortcut = QShortcut(QKeySequence('0'),windowHandle)
        self.button0_shortcut.activated.connect(lambda:controllerHandle.appendNumber("0"))

        self.buttonDot = buttonClass.button(".")
        self.buttonDot.clicked.connect(lambda:controllerHandle.appendNumber("."))
        self.dot_shortcut = QShortcut(QKeySequence('.'),windowHandle)
        self.dot_shortcut.activated.connect(lambda:controllerHandle.appendNumber("."))
        self.buttonEnter = buttonClass.button("Enter")
        self.buttonEnter.clicked.connect(lambda:controllerHandle.enterNumber())
        self.enter_shortcut = QShortcut(QKeySequence('return'),windowHandle)
        self.enter_shortcut.activated.connect(lambda:controllerHandle.enterNumber())
        self.button1 = buttonClass.button("1")
        self.button1.clicked.connect(lambda:controllerHandle.appendNumber("1"))
        self.one_shortcut = QShortcut(QKeySequence('1'),windowHandle)
        self.one_shortcut.activated.connect(lambda:controllerHandle.appendNumber("1"))
        self.button2 = buttonClass.button("2")
        self.button2.clicked.connect(lambda:controllerHandle.appendNumber("2"))
        self.two_shortcut = QShortcut(QKeySequence('2'),windowHandle)
        self.two_shortcut.activated.connect(lambda:controllerHandle.appendNumber("2"))
        self.button3 = buttonClass.button("3")
        self.button3.clicked.connect(lambda:controllerHandle.appendNumber("3"))
        self.three_shortcut = QShortcut(QKeySequence('3'),windowHandle)
        self.three_shortcut.activated.connect(lambda:controllerHandle.appendNumber("3"))
        self.buttonPlus = buttonClass.button("+")
        self.buttonPlus.clicked.connect(lambda:controllerHandle.operator("+"))
        self.plus_shortcut = QShortcut(QKeySequence('+'),windowHandle)
        self.plus_shortcut.activated.connect(lambda:controllerHandle.operator("+"))
        self.button4 = buttonClass.button("4")
        self.button4.clicked.connect(lambda:controllerHandle.appendNumber("4"))
        self.four_shortcut = QShortcut(QKeySequence('4'),windowHandle)
        self.four_shortcut.activated.connect(lambda:controllerHandle.appendNumber("4"))
        self.button5 = buttonClass.button("5")
        self.button5.clicked.connect(lambda:controllerHandle.appendNumber("5"))
        self.five_shortcut = QShortcut(QKeySequence('5'),windowHandle)
        self.five_shortcut.activated.connect(lambda:controllerHandle.appendNumber("5"))
        self.button6 = buttonClass.button("6")
        self.button6.clicked.connect(lambda:controllerHandle.appendNumber("6"))
        self.six_shortcut = QShortcut(QKeySequence('6'),windowHandle)
        self.six_shortcut.activated.connect(lambda:controllerHandle.appendNumber("6"))
        self.buttonMinus = buttonClass.button("-")
        self.buttonMinus.clicked.connect(lambda:controllerHandle.operator("-"))
        self.minus_shortcut = QShortcut(QKeySequence('-'),windowHandle)
        self.minus_shortcut.activated.connect(lambda:controllerHandle.operator("-"))
        self.button7 = buttonClass.button("7")
        self.button7.clicked.connect(lambda:controllerHandle.appendNumber("7"))
        self.seven_shortcut = QShortcut(QKeySequence('7'),windowHandle)
        self.seven_shortcut.activated.connect(lambda:controllerHandle.appendNumber("7"))
        self.button8 = buttonClass.button("8")
        self.button8.clicked.connect(lambda:controllerHandle.appendNumber("8"))
        self.eight_shortcut = QShortcut(QKeySequence('8'),windowHandle)
        self.eight_shortcut.activated.connect(lambda:controllerHandle.appendNumber("8"))
        self.button9 = buttonClass.button("9")
        self.button9.clicked.connect(lambda:controllerHandle.appendNumber("9"))
        self.nine_shortcut = QShortcut(QKeySequence('9'),windowHandle)
        self.nine_shortcut.activated.connect(lambda:controllerHandle.appendNumber("9"))
        self.buttonMult = buttonClass.button("\u00D7")
        self.buttonMult.clicked.connect(lambda:controllerHandle.operator("*"))
        self.mult_shortcut = QShortcut(QKeySequence('*'),windowHandle)
        self.mult_shortcut.activated.connect(lambda:controllerHandle.operator("*"))
        self.buttonSin = buttonClass.button("sin")        
        self.buttonSin.clicked.connect(lambda:controllerHandle.operator("sin"))
        self.sin_shortcut = QShortcut(QKeySequence('s'),windowHandle)
        self.sin_shortcut.activated.connect(lambda:controllerHandle.operator("sin"))
        self.buttonCos = buttonClass.button("cos")
        self.buttonCos.clicked.connect(lambda:controllerHandle.operator("cos"))
        self.cos_shortcut = QShortcut(QKeySequence('c'),windowHandle)
        self.cos_shortcut.activated.connect(lambda:controllerHandle.operator("cos"))
        self.buttonTan = buttonClass.button("tan")
        self.buttonTan.clicked.connect(lambda:controllerHandle.operator("tan"))
        self.tan_shortcut = QShortcut(QKeySequence('t'),windowHandle)
        self.tan_shortcut.activated.connect(lambda:controllerHandle.operator("tan"))
        self.buttonDiv = buttonClass.button("\u00F7")
        self.buttonDiv.clicked.connect(lambda:controllerHandle.operator("/"))
        self.div_shortcut = QShortcut(QKeySequence('/'),windowHandle)
        self.div_shortcut.activated.connect(lambda:controllerHandle.operator("/"))
        self.buttonPi = buttonClass.button("\u03C0")
        self.buttonPi.clicked.connect(lambda:controllerHandle.addPi())
        self.pi_shortcut = QShortcut(QKeySequence('p'),windowHandle)
        self.pi_shortcut.activated.connect(lambda:controllerHandle.addPi())
        self.buttonPlusMinus = buttonClass.button("\u00B1")
        self.buttonPlusMinus.clicked.connect(lambda:controllerHandle.operator("plusminus"))
        self.negate_shortcut = QShortcut(QKeySequence('n'),windowHandle)
        self.negate_shortcut.activated.connect(lambda:controllerHandle.operator("plusminus"))
        self.buttonSwap = buttonClass.button("X \u21C6 Y")
        self.buttonSwap.clicked.connect(lambda:controllerHandle.operator("swap"))
        self.swap_shortcut = QShortcut(QKeySequence('Ctrl+s'),windowHandle)
        self.swap_shortcut.activated.connect(lambda:controllerHandle.operator("swap"))
        self.buttonClear = buttonClass.button("C")
        self.buttonClear.clicked.connect(lambda:controllerHandle.clearStack())
        self.clear_shortcut = QShortcut(QKeySequence('Esc'),windowHandle)
        self.clear_shortcut.activated.connect(lambda:controllerHandle.clearStack())
        self.buttonShift = buttonClass.button("\u2191")
        self.buttonShift.clicked.connect(lambda:self.shiftClicked())
        self.shift_shortcut = QShortcut(QKeySequence('Space'),windowHandle)
        self.shift_shortcut.activated.connect(lambda:self.shiftClicked())
        self.buttonShift.clicked = False
        self.buttonLn = buttonClass.button("ln")
        self.buttonLn.clicked.connect(lambda:controllerHandle.operator("ln"))
        self.ln_shortcut = QShortcut(QKeySequence('l'),windowHandle)
        self.ln_shortcut.activated.connect(lambda:controllerHandle.operator("ln"))
        self.buttonExp = buttonClass.button("y\u02E3")
        self.buttonExp.clicked.connect(lambda:controllerHandle.operator("^"))
        self.exp_shortcut = QShortcut(QKeySequence('^'),windowHandle)
        self.exp_shortcut.activated.connect(lambda:controllerHandle.operator("^"))
        self.buttonBackspace = buttonClass.button("\u2190")
        self.buttonBackspace.clicked.connect(lambda:controllerHandle.delete())
        self.delete_shortcut = QShortcut(QKeySequence('backspace'),windowHandle)
        self.delete_shortcut.activated.connect(lambda:controllerHandle.delete())
        self.button_mode = buttonClass.button(controllerHandle.get_mode())
        self.button_mode.clicked.connect(lambda:self.mode_clicked(controllerHandle))
        self.settingsButton = buttonClass.button("\u2600")
        self.settingsButton.clicked.connect(lambda:controllerHandle.switchMode())
        self.button_inv = buttonClass.button("1/x")
        self.button_inv.clicked.connect(lambda:controllerHandle.operator('inv'))
        self.inv_shortcut = QShortcut(QKeySequence('i'),windowHandle)
        self.inv_shortcut.activated.connect(lambda:controllerHandle.operator("inv"))
        self.log_button = buttonClass.button("Log\u2081\u2080 X")
        self.log_button.clicked.connect(lambda:controllerHandle.operator('log'))
        self.log_shortcut = QShortcut(QKeySequence('Shift+l'),windowHandle)
        self.log_shortcut.activated.connect(lambda:controllerHandle.operator("log"))
        self.asin_shortcut = QShortcut(QKeySequence('Shift+s'),windowHandle)
        self.asin_shortcut.activated.connect(lambda:controllerHandle.operator("arcsin"))
        self.acos_shortcut = QShortcut(QKeySequence('Shift+c'),windowHandle)
        self.acos_shortcut.activated.connect(lambda:controllerHandle.operator("arccos"))
        self.atan_shortcut = QShortcut(QKeySequence('Shift+t'),windowHandle)
        self.atan_shortcut.activated.connect(lambda:controllerHandle.operator("arctan"))
        self.e_shortcut = QShortcut(QKeySequence('e'),windowHandle)
        self.e_shortcut.activated.connect(lambda:controllerHandle.operator("e"))
        self.root_shortcut = QShortcut(QKeySequence('r'),windowHandle)
        self.root_shortcut.activated.connect(lambda:controllerHandle.operator("root"))

        self.addWidget(self.button0,7,0)
        self.addWidget(self.buttonDot,7,1)
        self.addWidget(self.buttonEnter, 7, 2, 1, 2)
        self.addWidget(self.button1, 6, 0)
        self.addWidget(self.button2, 6, 1)
        self.addWidget(self.button3, 6, 2)
        self.addWidget(self.buttonPlus, 6, 3)        
        self.addWidget(self.button4, 5, 0)
        self.addWidget(self.button5, 5, 1)
        self.addWidget(self.button6, 5, 2)
        self.addWidget(self.buttonMinus, 5, 3)
        self.addWidget(self.button7,4, 0)
        self.addWidget(self.button8, 4, 1)
        self.addWidget(self.button9, 4, 2)
        self.addWidget(self.buttonMult, 4, 3)
        self.addWidget(self.buttonSin, 3, 0)
        self.addWidget(self.buttonCos, 3, 1)
        self.addWidget(self.buttonTan, 3, 2)
        self.addWidget(self.buttonDiv, 3, 3)
        self.addWidget(self.buttonPi, 2, 0)
        self.addWidget(self.buttonPlusMinus, 2, 1)
        self.addWidget(self.buttonSwap, 2, 2)
        self.addWidget(self.buttonClear, 2, 3)
        self.addWidget(self.buttonShift, 1, 0)
        self.addWidget(self.buttonLn, 1, 1)
        self.addWidget(self.buttonExp, 1, 2)
        self.addWidget(self.buttonBackspace, 1, 3)
        self.addWidget(self.button_mode, 0, 0)
        self.addWidget(self.settingsButton,0, 3)
        self.addWidget(self.button_inv, 0, 1)
        self.addWidget(self.log_button, 0, 2)

        layoutHandle.addLayout(self, 1,0,2,1)
        
    def shiftClicked(self):
        if self.buttonShift.clicked == False:
            self.buttonShift.clicked = True
            self.buttonSin.setText("asin")        
            self.buttonSin.disconnect()
            self.buttonSin.clicked.connect(lambda:self.controllerHandle.operator("arcsin"))
            self.buttonCos.setText("acos")
            self.buttonCos.disconnect()        
            self.buttonCos.clicked.connect(lambda:self.controllerHandle.operator("arccos"))
            self.buttonTan.setText("atan")
            self.buttonTan.disconnect()        
            self.buttonTan.clicked.connect(lambda:self.controllerHandle.operator("arctan"))
            self.buttonLn.setText("e\u02E3")
            self.buttonLn.disconnect()
            self.buttonLn.clicked.connect(lambda:self.controllerHandle.operator("e"))
            self.buttonExp.disconnect()
            self.buttonExp.setText("\u02E3\u221Ay")
            self.buttonExp.clicked.connect(lambda:self.controllerHandle.operator("root"))
        elif self.buttonShift.clicked == True:
            self.buttonShift.clicked = False
            self.buttonSin.setText("sin")
            self.buttonSin.disconnect()        
            self.buttonSin.clicked.connect(lambda:self.controllerHandle.operator("sin"))
            self.buttonCos.setText("cos")
            self.buttonCos.disconnect()        
            self.buttonCos.clicked.connect(lambda:self.controllerHandle.operator("cos"))
            self.buttonTan.setText("tan")
            self.buttonTan.disconnect()        
            self.buttonTan.clicked.connect(lambda:self.controllerHandle.operator("tan"))
            self.buttonLn.disconnect()
            self.buttonLn.setText("ln")
            self.buttonLn.clicked.connect(lambda:self.controllerHandle.operator("ln"))
            self.buttonExp.disconnect()
            self.buttonExp.setText("y\u02E3")
            self.buttonExp.clicked.connect(lambda:self.controllerHandle.operator("^"))        
             
    def mode_clicked(self, controllerHandle):
        controllerHandle.set_mode()
        self.button_mode.setText(controllerHandle.get_mode())
  